// QBJ schema uses a different case for property names than the internal YF data structures do

export function camelCaseToSnakeCase(obj: any) {
  if (typeof obj !== 'object') return;

  obj.short_name = obj.shortName;
  obj.tournament_site = obj.tournamentSite;
  obj.scoring_rules = obj.scoringRules;
  obj.start_date = obj.startDate;
  obj.end_date = obj.endDate;
  obj.question_set = obj.questionSet;
  obj.teams_per_match = obj.teamsPerMatch;
  obj.maximum_players_per_team = obj.maximumPlayersPerTeam;
  obj.regulation_tossup_count = obj.regulationTossupCount;
  obj.maximum_regulation_tossup_count = obj.maximumRegulationTossupCount;
  obj.minimum_overtime_question_count = obj.minimumOvertimeQuestionCount;
  obj.overtime_includes_bonuses = obj.overtimeIncludesBonuses;
  obj.total_divisor = obj.totalDivisor;
  obj.maximum_bonus_score = obj.maximumBonusScore;
  obj.bonus_divisor = obj.bonusDivisor;
  obj.minimum_parts_per_bonus = obj.minimumPartsPerBonus;
  obj.maximum_parts_per_bonus = obj.maximumPartsPerBonus;
  obj.points_per_bonus_part = obj.pointsPerBonusPart;
  obj.bonuses_bounce_back = obj.bonusesBounceBack;
  obj.lightning_count_per_team = obj.lightningCountPerTeam;
  obj.maximum_lightning_score = obj.maximumLightningScore;
  obj.lightning_divisor = obj.lightningDivisor;
  obj.lightnings_bounce_back = obj.lightningsBounceBack;
  obj.answer_types = obj.answerTypes;
  obj.short_label = obj.shortLabel;
  obj.awards_bonus = obj.awardsBonus;
  obj.cards_traded = obj.cardsTraded;
  obj.pool_teams = obj.poolTeams;
  obj.tossups_read = obj.tossupsRead;
  obj.overtime_tossups_read = obj.overtimeTossupsRead;
  obj.match_teams = obj.matchTeams;
  obj.carryover_phases = obj.carryoverPhases;
  obj.match_questions = obj.matchQuestions;
  obj.question_number = obj.questionNumber;
  obj.tossup_question = obj.tossupQuestion;
  obj.tossup_start_time = obj.tossupStartTime;
  obj.replacement_tossup_question = obj.replacementTossupQuestion;
  obj.replacement_tossup_start_time = obj.replacementTossupStartTime;
  obj.replacement_tossup_question_match_teams = obj.replacementTossupQuestionMatchTeams;
  obj.bonus_points = obj.bonusPoints;
  obj.bonus_bounceback_points = obj.bonusBouncebackPoints;
  obj.bonus_start_time = obj.bonusStartTime;
  obj.replacement_bonus = obj.replacementBonus;
  obj.buzz_position = obj.buzzPosition;
  obj.word_index = obj.wordIndex;
  obj.clue_index = obj.clueIndex;
  obj.eligible_match_teams = obj.eligibleMatchTeams;
  obj.controlled_points = obj.controlledPoints;
  obj.bounceback_points = obj.bouncebackPoints;
  obj.forfeit_loss = obj.forfeitLoss;
  obj.bonus_points = obj.bonusPoints;
  obj.correct_tossups_without_bonuses = obj.correctTossupsWithoutBonuses;
  obj.bonus_bounceback_points = obj.bonusBouncebackPoints;
  obj.match_players = obj.matchPlayers;
  obj.suppress_from_statistics = obj.suppressFromStatistics;
  obj.tossups_heard = obj.tossupsHeard;
  obj.answer_counts = obj.answerCounts;
  obj.answer_type = obj.answerType;
  obj.first_question = obj.firstQuestion;
  obj.question_number = obj.questionNumber;
  obj.external_id = obj.externalId;
  obj.category_group = obj.categoryGroup;

  delete obj.shortName;
  delete obj.tournamentSite;
  delete obj.scoringRules;
  delete obj.startDate;
  delete obj.endDate;
  delete obj.questionSet;
  delete obj.teamsPerMatch;
  delete obj.maximumPlayersPerTeam;
  delete obj.regulationTossupCount;
  delete obj.maximumRegulationTossupCount;
  delete obj.minimumOvertimeQuestionCount;
  delete obj.overtimeIncludesBonuses;
  delete obj.totalDivisor;
  delete obj.maximumBonusScore;
  delete obj.bonusDivisor;
  delete obj.minimumPartsPerBonus;
  delete obj.maximumPartsPerBonus;
  delete obj.pointsPerBonusPart;
  delete obj.bonusesBounceBack;
  delete obj.lightningCountPerTeam;
  delete obj.maximumLightningScore;
  delete obj.lightningDivisor;
  delete obj.lightningsBounceBack;
  delete obj.answerTypes;
  delete obj.shortLabel;
  delete obj.awardsBonus;
  delete obj.cardsTraded;
  delete obj.poolTeams;
  delete obj.tossupsRead;
  delete obj.overtimeTossupsRead;
  delete obj.matchTeams;
  delete obj.carryoverPhases;
  delete obj.matchQuestions;
  delete obj.questionNumber;
  delete obj.tossupQuestion;
  delete obj.tossupStartTime;
  delete obj.replacementTossupQuestion;
  delete obj.replacementTossupStartTime;
  delete obj.replacementTossupQuestionMatchTeams;
  delete obj.bonusPoints;
  delete obj.bonusBouncebackPoints;
  delete obj.bonusStartTime;
  delete obj.replacementBonus;
  delete obj.buzzPosition;
  delete obj.wordIndex;
  delete obj.clueIndex;
  delete obj.eligibleMatchTeams;
  delete obj.controlledPoints;
  delete obj.bouncebackPoints;
  delete obj.forfeitLoss;
  delete obj.bonusPoints;
  delete obj.correctTossupsWithoutBonuses;
  delete obj.bonusBouncebackPoints;
  delete obj.matchPlayers;
  delete obj.suppressFromStatistics;
  delete obj.tossupsHeard;
  delete obj.answerCounts;
  delete obj.answerType;
  delete obj.firstQuestion;
  delete obj.questionNumber;
  delete obj.externalId;
  delete obj.categoryGroup;

  for (const prop in obj) {
    if (typeof obj[prop] === 'object') camelCaseToSnakeCase(obj[prop]);
  }
}

export function snakeCaseToCamelCase(obj: any) {
  if (typeof obj !== 'object') return;

  obj.shortName = obj.short_name;
  obj.tournamentSite = obj.tournament_site;
  obj.scoringRules = obj.scoring_rules;
  obj.startDate = obj.start_date;
  obj.endDate = obj.end_date;
  obj.questionSet = obj.question_set;
  obj.teamsPerMatch = obj.teams_per_match;
  obj.maximumPlayersPerTeam = obj.maximum_players_per_team;
  obj.regulationTossupCount = obj.regulation_tossup_count;
  obj.maximumRegulationTossupCount = obj.maximum_regulation_tossup_count;
  obj.minimumOvertimeQuestionCount = obj.minimum_overtime_question_count;
  obj.overtimeIncludesBonuses = obj.overtime_includes_bonuses;
  obj.totalDivisor = obj.total_divisor;
  obj.maximumBonusScore = obj.maximum_bonus_score;
  obj.bonusDivisor = obj.bonus_divisor;
  obj.minimumPartsPerBonus = obj.minimum_parts_per_bonus;
  obj.maximumPartsPerBonus = obj.maximum_parts_per_bonus;
  obj.pointsPerBonusPart = obj.points_per_bonus_part;
  obj.bonusesBounceBack = obj.bonuses_bounce_back;
  obj.lightningCountPerTeam = obj.lightning_count_per_team;
  obj.maximumLightningScore = obj.maximum_lightning_score;
  obj.lightningDivisor = obj.lightning_divisor;
  obj.lightningsBounceBack = obj.lightnings_bounce_back;
  obj.answerTypes = obj.answer_types;
  obj.shortLabel = obj.short_label;
  obj.awardsBonus = obj.awards_bonus;
  obj.cardsTraded = obj.cards_traded;
  obj.poolTeams = obj.pool_teams;
  obj.tossupsRead = obj.tossups_read;
  obj.overtimeTossupsRead = obj.overtime_tossups_read;
  obj.matchTeams = obj.match_teams;
  obj.carryoverPhases = obj.carryover_phases;
  obj.matchQuestions = obj.match_questions;
  obj.questionNumber = obj.question_number;
  obj.tossupQuestion = obj.tossup_question;
  obj.tossupStartTime = obj.tossup_start_time;
  obj.replacementTossupQuestion = obj.replacement_tossup_question;
  obj.replacementTossupStartTime = obj.replacement_tossup_start_time;
  obj.replacementTossupQuestionMatchTeams = obj.replacement_tossup_question_match_teams;
  obj.bonusPoints = obj.bonus_points;
  obj.bonusBouncebackPoints = obj.bonus_bounceback_points;
  obj.bonusStartTime = obj.bonus_start_time;
  obj.replacementBonus = obj.replacement_bonus;
  obj.buzzPosition = obj.buzz_position;
  obj.wordIndex = obj.word_index;
  obj.clueIndex = obj.clue_index;
  obj.eligibleMatchTeams = obj.eligible_match_teams;
  obj.controlledPoints = obj.controlled_points;
  obj.bouncebackPoints = obj.bounceback_points;
  obj.forfeitLoss = obj.forfeit_loss;
  obj.bonusPoints = obj.bonus_points;
  obj.correctTossupsWithoutBonuses = obj.correct_tossups_without_bonuses;
  obj.bonusBouncebackPoints = obj.bonus_bounceback_points;
  obj.matchPlayers = obj.match_players;
  obj.suppressFromStatistics = obj.suppress_from_statistics;
  obj.tossupsHeard = obj.tossups_heard;
  obj.answerCounts = obj.answer_counts;
  obj.answerType = obj.answer_type;
  obj.firstQuestion = obj.first_question;
  obj.questionNumber = obj.question_number;
  obj.externalId = obj.external_id;
  obj.categoryGroup = obj.category_group;

  delete obj.short_name;
  delete obj.tournament_site;
  delete obj.scoring_rules;
  delete obj.start_date;
  delete obj.end_date;
  delete obj.question_set;
  delete obj.teams_per_match;
  delete obj.maximum_players_per_team;
  delete obj.regulation_tossup_count;
  delete obj.maximum_regulation_tossup_count;
  delete obj.minimum_overtime_question_count;
  delete obj.overtime_includes_bonuses;
  delete obj.total_divisor;
  delete obj.maximum_bonus_score;
  delete obj.bonus_divisor;
  delete obj.minimum_parts_per_bonus;
  delete obj.maximum_parts_per_bonus;
  delete obj.points_per_bonus_part;
  delete obj.bonuses_bounce_back;
  delete obj.lightning_count_per_team;
  delete obj.maximum_lightning_score;
  delete obj.lightning_divisor;
  delete obj.lightnings_bounce_back;
  delete obj.answer_types;
  delete obj.short_label;
  delete obj.awards_bonus;
  delete obj.cards_traded;
  delete obj.pool_teams;
  delete obj.tossups_read;
  delete obj.overtime_tossups_read;
  delete obj.match_teams;
  delete obj.carryover_phases;
  delete obj.match_questions;
  delete obj.question_number;
  delete obj.tossup_question;
  delete obj.tossup_start_time;
  delete obj.replacement_tossup_question;
  delete obj.replacement_tossup_start_time;
  delete obj.replacement_tossup_question_match_teams;
  delete obj.bonus_points;
  delete obj.bonus_bounceback_points;
  delete obj.bonus_start_time;
  delete obj.replacement_bonus;
  delete obj.buzz_position;
  delete obj.word_index;
  delete obj.clue_index;
  delete obj.eligible_match_teams;
  delete obj.controlled_points;
  delete obj.bounceback_points;
  delete obj.forfeit_loss;
  delete obj.bonus_points;
  delete obj.correct_tossups_without_bonuses;
  delete obj.bonus_bounceback_points;
  delete obj.match_players;
  delete obj.suppress_from_statistics;
  delete obj.tossups_heard;
  delete obj.answer_counts;
  delete obj.answer_type;
  delete obj.first_question;
  delete obj.question_number;
  delete obj.external_id;
  delete obj.category_group;

  for (const prop in obj) {
    if (typeof obj[prop] === 'object') snakeCaseToCamelCase(obj[prop]);
  }
}
